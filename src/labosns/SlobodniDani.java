package labosns;
// Generated Oct 27, 2019 7:19:04 PM by Hibernate Tools 4.3.1


import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * SlobodniDani generated by hbm2java
 */
@Entity
@Table(name="slobodni_dani"
    ,catalog="laboratorija"
)
public class SlobodniDani  implements java.io.Serializable {
    @Transient
    private PropertyChangeSupport changeSupport = new PropertyChangeSupport(this);


@Id
    @GeneratedValue(strategy=IDENTITY)
    @Column(name="id", unique=true, nullable=false)
     private Integer id;
@Column(name="Datum", nullable=false, length=45)
     private String datum;
@Column(name="Slobodnidan", nullable=false, length=45)
     private String slobodniDan;

    public SlobodniDani() {
    }

    public SlobodniDani(String datum, String slobodniDan) {
       this.datum = datum;
       this.slobodniDan = slobodniDan;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        Integer oldId = this.id;
        this.id = id;
        changeSupport.firePropertyChange("id", oldId, id);
    }

    
    public String getDatum() {
        return this.datum;
    }
    
    public void setDatum(String datum) {
        String oldDatum = this.datum;
        this.datum = datum;
        changeSupport.firePropertyChange("datum", oldDatum, datum);
    }

    
    public String getSlobodniDan() {
        return this.slobodniDan;
    }
    
    public void setSlobodniDan(String slobodniDan) {
        String oldSlobodniDan = this.slobodniDan;
        this.slobodniDan = slobodniDan;
        changeSupport.firePropertyChange("slobodniDan", oldSlobodniDan, slobodniDan);
    }

    public void addPropertyChangeListener(PropertyChangeListener listener) {
        changeSupport.addPropertyChangeListener(listener);
    }

    public void removePropertyChangeListener(PropertyChangeListener listener) {
        changeSupport.removePropertyChangeListener(listener);
    }




}


